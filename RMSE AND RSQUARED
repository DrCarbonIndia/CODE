# Define the empirical model
def calculate_ccs_cost(c_capture, c_storage, v_credit):
    return c_capture + c_storage - v_credit

# Define the real-world data
c_capture_data = [5000, 6000, 5500, 6500, 7000, 4500, 5000, 6000, 5500, 6500] # cost of capturing CO2 (₹/ton)
c_storage_data = [2000, 2500, 3000, 3500, 4000, 2000, 2500, 3000, 3500, 4000] # cost of storing CO2 (₹/ton)
v_credit_data = [1000, 1500, 2000, 2500, 3000, 1000, 1500, 2000, 2500, 3000] # value of CO2 credits (₹/ton)
ccs_cost_data = [8000, 9000, 6500, 10500, 10000, 4000, 6000, 7000, 6500, 9500] # net cost of CCS project (₹/ton)

# Calculate the predicted net cost of the CCS projects using the empirical model
ccs_cost_predicted = []
for i in range(len(c_capture_data)):
    ccs_cost_predicted.append(calculate_ccs_cost(c_capture_data[i], c_storage_data[i], v_credit_data[i]))

# Evaluate the accuracy of the model using R-squared and RMSE
from sklearn.metrics import r2_score, mean_squared_error
r_squared = r2_score(ccs_cost_data, ccs_cost_predicted)
rmse = mean_squared_error(ccs_cost_data, ccs_cost_predicted, squared=False)

print("R-squared: ", r_squared)
print("RMSE: ", rmse)
